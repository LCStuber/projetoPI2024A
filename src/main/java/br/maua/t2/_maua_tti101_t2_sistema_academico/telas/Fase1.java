/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.maua.t2._maua_tti101_t2_sistema_academico.telas;

import br.maua.t2._maua_tti101_t2_sistema_academico.modelo.Usuario;
import java.awt.Color;
import javax.swing.BorderFactory;

/**
 *
 * @author luisa
 */
public class Fase1 extends javax.swing.JFrame {

public void verifica_fase(){
    if (!BotãoVermelho.isEnabled() & !BotãoVerde.isEnabled() & !BotãoAmarelo.isEnabled() & !BotãoAzul.isEnabled() ) {
        if (!Usuario.Fase2) {
            this.dispose();
            new Fase2().setVisible(true);
        } else if (!Usuario.Fase3) {
            this.dispose();
            new Fase3().setVisible(true);
        } else if (!Usuario.Fase4) {
            this.dispose();
            new Fase4().setVisible(true);
        } else {
            this.dispose();
            new PontuacaoTela().setVisible(true);
        }
    }
}
    /**
     * Creates new form Fase1
     */
    public Fase1() {
        initComponents();
    }

    /**
     * This me
     * thod is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotãoVermelho = new javax.swing.JToggleButton();
        BotãoVerde = new javax.swing.JToggleButton();
        BotãoAzul = new javax.swing.JToggleButton();
        BotãoAmarelo = new javax.swing.JToggleButton();
        BotãoRespostaVerde = new javax.swing.JToggleButton();
        BotãoRespostaVermelho = new javax.swing.JToggleButton();
        BotãoRespostaAzul = new javax.swing.JToggleButton();
        BotãoRespostaAmarelo = new javax.swing.JToggleButton();
        Fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        BotãoVermelho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/vermelho.png"))); // NOI18N
        BotãoVermelho.setText("jToggleButton1");
        BotãoVermelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVermelhoActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVermelho);
        BotãoVermelho.setBounds(450, 70, 129, 122);

        BotãoVerde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/verde.png"))); // NOI18N
        BotãoVerde.setText("jToggleButton1");
        BotãoVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVerdeActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVerde);
        BotãoVerde.setBounds(310, 70, 129, 122);

        BotãoAzul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/azul.png"))); // NOI18N
        BotãoAzul.setText("jToggleButton1");
        BotãoAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoAzulActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoAzul);
        BotãoAzul.setBounds(170, 70, 129, 122);

        BotãoAmarelo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/amarelo.png"))); // NOI18N
        BotãoAmarelo.setText("jToggleButton1");
        BotãoAmarelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoAmareloActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoAmarelo);
        BotãoAmarelo.setBounds(30, 70, 129, 122);

        BotãoRespostaVerde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/planta.png"))); // NOI18N
        BotãoRespostaVerde.setText("jToggleButton1");
        BotãoRespostaVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoRespostaVerdeActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoRespostaVerde);
        BotãoRespostaVerde.setBounds(30, 220, 129, 122);

        BotãoRespostaVermelho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/m2.png"))); // NOI18N
        BotãoRespostaVermelho.setText("jToggleButton1");
        BotãoRespostaVermelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoRespostaVermelhoActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoRespostaVermelho);
        BotãoRespostaVermelho.setBounds(170, 220, 129, 122);

        BotãoRespostaAzul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/nuvem.png"))); // NOI18N
        BotãoRespostaAzul.setText("jToggleButton1");
        BotãoRespostaAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoRespostaAzulActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoRespostaAzul);
        BotãoRespostaAzul.setBounds(310, 220, 129, 122);

        BotãoRespostaAmarelo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/banana.png"))); // NOI18N
        BotãoRespostaAmarelo.setText("jToggleButton1");
        BotãoRespostaAmarelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoRespostaAmareloActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoRespostaAmarelo);
        BotãoRespostaAmarelo.setBounds(450, 220, 129, 122);

        Fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/branco fundo.png"))); // NOI18N
        getContentPane().add(Fundo);
        Fundo.setBounds(0, 0, 600, 460);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotãoVermelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVermelhoActionPerformed
        boolean estavaResolvidoVerde = !(BotãoVerde.isEnabled());
        boolean estavaResolvidoAmarelo = !(BotãoAmarelo.isEnabled());
        boolean estavaResolvidoAzul = !(BotãoAzul.isEnabled());
        if (BotãoVermelho.isSelected()) {
            BotãoVermelho.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            System.out.println(BotãoVerde.isEnabled());
            if (!estavaResolvidoVerde) {
                System.out.println("Batata");
                BotãoVerde.setEnabled(false);
            }
            if (!estavaResolvidoAmarelo) {
                BotãoAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoAzul) {
                BotãoAzul.setEnabled(false);
            }
        }
        if (BotãoVermelho.isSelected()&& BotãoRespostaVermelho.isSelected()){
            BotãoVermelho.setEnabled(false);
            BotãoRespostaVermelho.setEnabled(false);
        } else {
            if (BotãoRespostaVerde.isSelected() || BotãoRespostaAzul.isSelected() || BotãoRespostaAmarelo.isSelected()) {
                BotãoRespostaVerde.setSelected(false);
                BotãoRespostaAzul.setSelected(false);
                BotãoRespostaAmarelo.setSelected(false);
                BotãoVermelho.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoVerde) {
            BotãoVerde.setEnabled(true);
        }
        if (!estavaResolvidoAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoAzul) {
            BotãoAzul.setEnabled(true);
        }
        verifica_fase();
    }//GEN-LAST:event_BotãoVermelhoActionPerformed

    private void BotãoVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVerdeActionPerformed
        boolean estavaResolvidoVermelho = !(BotãoVermelho.isEnabled());
        boolean estavaResolvidoAmarelo = !(BotãoAmarelo.isEnabled());
        boolean estavaResolvidoAzul = !(BotãoAzul.isEnabled());
        if (BotãoVerde.isSelected()) {
            BotãoVerde.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoVermelho) {
                BotãoVermelho.setEnabled(false);
            }
            if (!estavaResolvidoAmarelo) {
                BotãoAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoAzul) {
                BotãoAzul.setEnabled(false);
            }
        }
        if (BotãoVerde.isSelected()&& BotãoRespostaVerde.isSelected()){
            BotãoVerde.setEnabled(false);
            BotãoRespostaVerde.setEnabled(false);
        } else {
            if (BotãoRespostaVermelho.isSelected() || BotãoRespostaAzul.isSelected() || BotãoRespostaAmarelo.isSelected()) {
                BotãoRespostaVermelho.setSelected(false);
                BotãoRespostaAzul.setSelected(false);
                BotãoRespostaAmarelo.setSelected(false);
                BotãoVerde.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoVermelho) {
            BotãoVermelho.setEnabled(true);
        }
        if (!estavaResolvidoAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoAzul) {
            BotãoAzul.setEnabled(true);

        } 
        verifica_fase();
    }//GEN-LAST:event_BotãoVerdeActionPerformed

    private void BotãoAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoAzulActionPerformed
        boolean estavaResolvidoVermelho = !(BotãoVermelho.isEnabled());
        boolean estavaResolvidoAmarelo = !(BotãoAmarelo.isEnabled());
        boolean estavaResolvidoVerde = !(BotãoVerde.isEnabled());
        if (BotãoAzul.isSelected()) {
            BotãoAzul.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoVermelho) {
                BotãoVermelho.setEnabled(false);
            }
            if (!estavaResolvidoAmarelo) {
                BotãoAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoVerde) {
                BotãoVerde.setEnabled(false);
            }
        }
        if (BotãoAzul.isSelected()&& BotãoRespostaAzul.isSelected()){
            BotãoAzul.setEnabled(false);
            BotãoRespostaAzul.setEnabled(false);
        } else {
            if (BotãoRespostaVermelho.isSelected() || BotãoRespostaVerde.isSelected() || BotãoRespostaAmarelo.isSelected()) {
                BotãoRespostaVermelho.setSelected(false);
                BotãoRespostaVerde.setSelected(false);
                BotãoRespostaAmarelo.setSelected(false);
                BotãoAzul.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoVermelho) {
            BotãoVermelho.setEnabled(true);
        }
        if (!estavaResolvidoAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoVerde) {
            BotãoVerde.setEnabled(true);

        }  
        verifica_fase();
    }//GEN-LAST:event_BotãoAzulActionPerformed

    private void BotãoAmareloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoAmareloActionPerformed
        boolean estavaResolvidoVermelho = !(BotãoVermelho.isEnabled());
        boolean estavaResolvidoAzul = !(BotãoAzul.isEnabled());
        boolean estavaResolvidoVerde = !(BotãoVerde.isEnabled());
        if (BotãoAmarelo.isSelected()) {
            BotãoAmarelo.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoVermelho) {
                BotãoVermelho.setEnabled(false);
            }
            if (!estavaResolvidoAzul) {
                BotãoAzul.setEnabled(false);
            }
            if (!estavaResolvidoVerde) {
                BotãoVerde.setEnabled(false);
            }
        }
        if (BotãoAmarelo.isSelected()&& BotãoRespostaAmarelo.isSelected()){
            BotãoAmarelo.setEnabled(false);
            BotãoRespostaAmarelo.setEnabled(false);
        } else {
            if (BotãoRespostaVermelho.isSelected() || BotãoRespostaVerde.isSelected() || BotãoRespostaAzul.isSelected()) {
                BotãoRespostaVermelho.setSelected(false);
                BotãoRespostaVerde.setSelected(false);
                BotãoRespostaAzul.setSelected(false);
                BotãoAmarelo.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoVermelho) {
            BotãoVermelho.setEnabled(true);
        }
        if (!estavaResolvidoAzul) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoVerde) {
            BotãoVerde.setEnabled(true);
        }
        verifica_fase();
    }//GEN-LAST:event_BotãoAmareloActionPerformed

    private void BotãoRespostaVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoRespostaVerdeActionPerformed
        boolean estavaResolvidoRespostaVermelho = !(BotãoVermelho.isEnabled());
        boolean estavaResolvidoRespostaAmarelo = !(BotãoAmarelo.isEnabled());
        boolean estavaResolvidoRespostaAzul = !(BotãoAzul.isEnabled());
        if (BotãoRespostaVerde.isSelected()) {
            BotãoRespostaVerde.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoRespostaVermelho) {
                BotãoRespostaVermelho.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAmarelo) {
                BotãoRespostaAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAzul) {
                BotãoRespostaAzul.setEnabled(false);
            }
        }
        if (BotãoRespostaVerde.isSelected()&& BotãoVerde.isSelected()){
            BotãoVerde.setEnabled(false);
            BotãoRespostaVerde.setEnabled(false);
        } else {
            if (BotãoVermelho.isSelected() || BotãoAzul.isSelected() || BotãoAmarelo.isSelected()) {
                BotãoVermelho.setSelected(false);
                BotãoAzul.setSelected(false);
                BotãoAmarelo.setSelected(false);
                BotãoRespostaVerde.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoRespostaVermelho) {
            BotãoVermelho.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAzul) {
            BotãoAzul.setEnabled(true);
            
        } 
        verifica_fase();
    }//GEN-LAST:event_BotãoRespostaVerdeActionPerformed

    private void BotãoRespostaVermelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoRespostaVermelhoActionPerformed
         boolean estavaResolvidoRespostaVerde = !(BotãoRespostaVerde.isEnabled());
        boolean estavaResolvidoRespostaAmarelo = !(BotãoRespostaAmarelo.isEnabled());
        boolean estavaResolvidoRespostaAzul = !(BotãoRespostaAzul.isEnabled());
        if (BotãoRespostaVermelho.isSelected()) {
            BotãoRespostaVermelho.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoRespostaVerde) {
                BotãoRespostaVerde.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAmarelo) {
                BotãoRespostaAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAzul) {
                BotãoRespostaAzul.setEnabled(false);
            }
        }
        if (BotãoRespostaVermelho.isSelected()&& BotãoVermelho.isSelected()){
            BotãoVermelho.setEnabled(false);
            BotãoRespostaVermelho.setEnabled(false);
        } else {
            if (BotãoVerde.isSelected() || BotãoAzul.isSelected() || BotãoAmarelo.isSelected()) {
                BotãoVerde.setSelected(false);
                BotãoAzul.setSelected(false);
                BotãoAmarelo.setSelected(false);
                BotãoRespostaVermelho.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoRespostaVerde) {
            BotãoVerde.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAzul) {
            BotãoAzul.setEnabled(true);
        }
        verifica_fase();
    }//GEN-LAST:event_BotãoRespostaVermelhoActionPerformed

    private void BotãoRespostaAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoRespostaAzulActionPerformed
        boolean estavaResolvidoRespostaVerde = !(BotãoRespostaVerde.isEnabled());
        boolean estavaResolvidoRespostaAmarelo = !(BotãoRespostaAmarelo.isEnabled());
        boolean estavaResolvidoRespostaVermelho = !(BotãoRespostaVermelho.isEnabled());
        if (BotãoRespostaAzul.isSelected()) {
            BotãoRespostaAzul.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoRespostaVerde) {
                BotãoRespostaVerde.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAmarelo) {
                BotãoRespostaAmarelo.setEnabled(false);
            }
            if (!estavaResolvidoRespostaVermelho) {
                BotãoRespostaVermelho.setEnabled(false);
            }
        }
        if (BotãoRespostaAzul.isSelected()&& BotãoAzul.isSelected()){
            BotãoAzul.setEnabled(false);
            BotãoRespostaAzul.setEnabled(false);
        } else {
            if (BotãoVerde.isSelected() || BotãoVermelho.isSelected() || BotãoAmarelo.isSelected()) {
                BotãoVerde.setSelected(false);
                BotãoVermelho.setSelected(false);
                BotãoAmarelo.setSelected(false);
                BotãoRespostaAzul.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoRespostaVerde) {
            BotãoVerde.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAmarelo) {
            BotãoAmarelo.setEnabled(true);
        }
        if (!estavaResolvidoRespostaVermelho) {
            BotãoAzul.setEnabled(true);
        }
        verifica_fase();
    }//GEN-LAST:event_BotãoRespostaAzulActionPerformed

    private void BotãoRespostaAmareloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoRespostaAmareloActionPerformed
        boolean estavaResolvidoRespostaVerde = !(BotãoRespostaVerde.isEnabled());
        boolean estavaResolvidoRespostaVermelho = !(BotãoRespostaVermelho.isEnabled());
        boolean estavaResolvidoRespostaAzul = !(BotãoRespostaAzul.isEnabled());
        if (BotãoRespostaAmarelo.isSelected()) {
            BotãoRespostaAmarelo.setBorder(BorderFactory.createLineBorder(Color.green, 5));
            if (!estavaResolvidoRespostaVerde) {
                BotãoRespostaVerde.setEnabled(false);
            }
            if (!estavaResolvidoRespostaVermelho) {
                BotãoRespostaVermelho.setEnabled(false);
            }
            if (!estavaResolvidoRespostaAzul) {
                BotãoRespostaAzul.setEnabled(false);
            }
        }
        if (BotãoRespostaAmarelo.isSelected()&& BotãoAmarelo.isSelected()){
            BotãoAmarelo.setEnabled(false);
            BotãoRespostaAmarelo.setEnabled(false);
        } else {
            if (BotãoVerde.isSelected() || BotãoAzul.isSelected() || BotãoVermelho.isSelected()) {
                BotãoVerde.setSelected(false);
                BotãoAzul.setSelected(false);
                BotãoVermelho.setSelected(false);
                BotãoRespostaAmarelo.setSelected(false);
                Usuario.pontuacao = Usuario.pontuacao - 25;
            }
        }
        if (!estavaResolvidoRespostaVerde) {
            BotãoVerde.setEnabled(true);
        }
        if (!estavaResolvidoRespostaVermelho) {
            BotãoVermelho.setEnabled(true);
        }
        if (!estavaResolvidoRespostaAzul) {
            BotãoAzul.setEnabled(true);
        }
        verifica_fase();
    }//GEN-LAST:event_BotãoRespostaAmareloActionPerformed

    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fase1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fase1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fase1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fase1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fase1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BotãoAmarelo;
    private javax.swing.JToggleButton BotãoAzul;
    private javax.swing.JToggleButton BotãoRespostaAmarelo;
    private javax.swing.JToggleButton BotãoRespostaAzul;
    private javax.swing.JToggleButton BotãoRespostaVerde;
    private javax.swing.JToggleButton BotãoRespostaVermelho;
    private javax.swing.JToggleButton BotãoVerde;
    private javax.swing.JToggleButton BotãoVermelho;
    private javax.swing.JLabel Fundo;
    // End of variables declaration//GEN-END:variables
}
